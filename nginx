# Backend Socket
upstream backend {
  server unix:///var/www/apps/<<...>>/backend.sock;
}

# Auto redirect to HTTPS
# server {
#   listen 80;
#   server_name <<hostname>>;
#   return 301 https://$server_name$request_uri;
# }

server {
  listen 443 ssl http2;
  server_name <<hostname>>;

  resolver 8.8.8.8 8.8.4.4 valid=300s;
  resolver_timeout 5s;

  ssl_stapling on;
  ssl_stapling_verify on;
  ssl on;
  ssl_certificate      /etc/ssl/<<public-cert>>.pem;
  ssl_certificate_key  /etc/ssl/private/<<private-cert>>.key;

  # Use Diffie-Hellman for A+ level
  #   generate: openssl dhparam -out /etc/ssl/dhparam.pem 4096
  #
  # ssl_dhparam          /etc/ssl/dhparam.pem;

  ssl_session_timeout 24h;
  ssl_session_cache shared:SSL:10m;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers kEECDH+AES128:kEECDH:kEDH:-3DES:kRSA+AES128:kEDH+3DES:DES-CBC3-SHA:!RC4:!aNULL:!eNULL:!MD5:!EXPORT:!LOW:!SEED:!CAMELLIA:!IDEA:!PSK:!SRP:!SSLv2;
  ssl_prefer_server_ciphers on;
  add_header Strict-Transport-Security "max-age=31536000;";

  # Root for static files
  root /var/www/apps/<<...>>/public;

  # Static files
  # location ^~ /assets/ {
  #   gzip_static on;
  #   gzip_vary on;
  #   expires max;
  #   add_header Cache-Control public;
  # }

  # Any others static files
  # location /google63089669d5ba9b0c.html {
  #   alias /var/www/html/google63089669d5ba9b0c.html;
  # }

  try_files $uri/index.html $uri @backend;

  location @backend {
    proxy_pass http://backend;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_redirect off;
  }

  # Set static error page
  # error_page 500 502 503 504 /500.html;

  keepalive_timeout 10;
}
